version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@6.7.0
  aws-ecs: circleci/aws-ecs@1.1.0
  aws-cli: circleci/aws-cli@0.1.16
jobs:
  test:
    machine:
      image: circleci/classic:edge
    environment:
      RAILS_ENV: test
      NODE_ENV: test
    steps:
      - checkout
      - run:
          name: update docker-compose
          command: pip install docker-compose==1.22.0
      - run:
          name: check docker-compose version
          command: docker-compose --version
      - run:
          name: docker-compose build
          command: docker-compose -p nuxt_on_rails_on_docker build
      - run:
          name: docker-compose -p nuxt_on_rails_on_docker run --rm backend bundle install --jobs=4
          command: docker-compose -p nuxt_on_rails_on_docker run --rm backend bundle install --jobs=4
      - run:
          name: docker-compose -p nuxt_on_rails_on_docker run --rm frontend yarn install
          command: docker-compose -p nuxt_on_rails_on_docker run --rm frontend yarn install
      - run:
          name: docker-compose up
          command: docker-compose -p nuxt_on_rails_on_docker up -d
      - run:
          name: frontend test 
          command: docker-compose -p nuxt_on_rails_on_docker run --rm frontend yarn test
      - run:
          name: docker-compose down
          command: docker-compose down
workflows:
  version: 2.1
  nuxt-ecr-push:
    jobs:
      - test
      - aws-ecr/build-and-push-image:
          name: rails-build-and-push-image
          requires:
            - test
          account-url: AWS_ECR_ACCOUNT_URL
          region: AWS_REGION
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          create-repo: true
          path: './backend/'
          repo: dishare-rails
          tag: "${CIRCLE_SHA1}"
          # filters:
          #   branches:
          #     only: master
      - aws-ecr/build-and-push-image:
          name: nuxt-build-and-push-image
          requires:
            - test
          account-url: AWS_ECR_ACCOUNT_URL
          region: AWS_REGION
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          create-repo: true
          path: './frontend/'
          dockerfile: Dockerfile.prd
          repo: dishare-nuxt
          tag: "${CIRCLE_SHA1}"
          # filters:
          #   branches:
          #     only: master

      - aws-ecs/deploy-service-update:
          name: nuxt-deploy-service-update
          requires:
            - nuxt-build-and-push-image
          family: 'dishare-nuxt-task' # ECSのタスク定義名
          cluster-name: '${ECS_ARN}'  #ECSのクラスターのARN
          service-name: 'dishare-nuxt-ecs-service'  #サービス名
          container-image-name-updates: "container=nuxt-container,tag=${CIRCLE_SHA1}"
          # filters:
          #   branches:
          #     only: master

      # terraformにて管理しているマイグレーション用タスクのアップデートと実行。
      - aws-ecs/update-task-definition:
          requires:
            - rails-build-and-push-image
          family: dishare_db_migrate
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: '${AWS_REGION}'
          # filters:
          #   branches:
          #     only: master
      - aws-ecs/run-task:
          requires:
            - aws-ecs/update-task-definition
          cluster: '${ECS_ARN}'
          task-definition: dishare_db_migrate
          subnet-ids: '${SUBNET_PUBLIC_1A},${SUBNET_PUBLIC_1C}'
          assign-public-ip: ENABLED
          security-group-ids: '${MIGRATION_SECURITY_GROUP_ID}'
          # filters:
          #   branches:
          #     only: master


      - aws-ecs/deploy-service-update:
          name: rails-deploy-service-update
          requires:
            - aws-ecs/run-task
          family: 'dishare-rails-task' # ECSのタスク定義名
          cluster-name: '${ECS_ARN}'  #ECSのクラスターのARN
          service-name: 'dishare-rails-ecs-service'  #サービス名
          container-image-name-updates: "container=rails-container,tag=${CIRCLE_SHA1}"
          # filters:
          #   branches:
          #     only: master

